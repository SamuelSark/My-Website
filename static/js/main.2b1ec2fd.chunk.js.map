{"version":3,"sources":["components/Intro.tsx","components/Dice.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Intro","className","Dice","useState","dice","setDice","style","height","width","fontSize","fontFamily","backgroundColor","onClick","min","max","Math","floor","random","App","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAYeA,EARD,WACV,OACI,mCACA,mBAAGC,UAAY,OAAf,gD,OCCR,IAgBeC,EAhBF,WAAW,IAAD,EACKC,mBAAU,GADf,mBACZC,EADY,KACNC,EADM,KAEnB,OAEI,cADA,CACA,sBACA,wBAAQJ,UAAY,cAAeK,MAAO,CAACC,OAAO,GAAIC,MAAO,IAAKC,SAAS,GAAIC,WAAY,SAAUC,gBAAgB,WAAYC,QAAS,kBAAMP,GATlIQ,EASuJ,EAT3IC,EAS8I,EARrKC,KAAKC,MAAMD,KAAKE,UAAaH,EAAMD,EAAO,GAAKA,KAD1D,IAAsBA,EAAYC,GAS1B,qBAGA,6BACKV,QCIEc,E,4JAdb,WAEE,OACE,yBAAQjB,UAAU,aAAlB,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,qBAAIK,MAAO,CAACG,SAAS,GAAIC,WAAW,SAApC,mBAAoD,mBAAGS,KAAK,gCAAR,kBAApD,iC,GATUC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2b1ec2fd.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"../index.css\"\n\nconst Intro = ():any => {\n    return(\n        <>\n        <p className = \"font\"> Developed by Samuel Sarkisian </p>\n        </>\n\n    );\n}\nexport default Intro;","import React, { useState } from 'react';\nimport \"../index.css\"\n\n\nfunction getRandomNum(min:number, max:number) {\n    return Math.floor(Math.random() * ((max - min) + 1) + min);\n  }\n  \nconst Dice = ():any => {\n    const [dice, setDice] = useState (0);\n    return(\n        //#a8334a\n        <>\n        <button className = \"buttonStyle\"  style={{height:50, width: 200, fontSize:28, fontFamily: 'Ubuntu', backgroundColor:\"#cf8090\"}} onClick={() => setDice(getRandomNum(1, 6))}>\n            Roll Me\n        </button>\n        <h1>\n            {dice}\n        </h1>\n\n        </>\n\n    );\n}\nexport default Dice;","import React, {Component, useState} from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Dice from './components/Dice';\n\n\nclass App extends Component{\n  render(){\n    \n    return (\n      <header className=\"App-header\">\n        <div className=\"App\">\n          <Intro/>\n          <Dice/>\n        </div>\n        <h4 style={{fontSize:12, fontFamily:'Menlo'}}>click <a href=\"https://github.com/SamuelSark\">here</a> to visit my GitHub.</h4>\n\n      </header>\n    );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}